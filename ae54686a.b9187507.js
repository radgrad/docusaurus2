(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{234:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return c}));var r=n(2),i=n(6),o=(n(0),n(320)),a={title:"Current Import Process",sidebar_label:"Import Process"},s={unversionedId:"developers/internaloha/import-process",id:"developers/internaloha/import-process",isDocsHomePage:!1,title:"Current Import Process",description:"RadGrad administrators can use the Manage Internships page to import internships from InterAloha.",source:"@site/docs/developers/internaloha/import-process.md",slug:"/developers/internaloha/import-process",permalink:"/docs/developers/internaloha/import-process",version:"current",lastUpdatedBy:"Cam Moore",lastUpdatedAt:1645829112,sidebar_label:"Import Process",sidebar:"mainSidebar",previous:{title:"Design Issues for InternAloha Integration",permalink:"/docs/developers/internaloha/design-issues"},next:{title:"Overview of RadGrad Deployment",permalink:"/docs/developers/deployment/overview"}},p=[],l={rightToc:p};function c(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"RadGrad administrators can use the Manage Internships page to import internships from InterAloha."),Object(o.b)("p",null,Object(o.b)("img",{src:n(574).default})),Object(o.b)("p",null,"The 'Delete Internships' button removes all the currently defined internship documents."),Object(o.b)("p",null,"The 'Upload Internships' button starts the process of getting the internships from InternAloha."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"We increment the missed upload count for each defined internship. (This might be obsolete)"),Object(o.b)("li",{parentName:"ol"},"We start the process of getting the internships by calling ",Object(o.b)("inlineCode",{parentName:"li"},"processInternAlohaInternships"),". ",Object(o.b)("inlineCode",{parentName:"li"},"processInternAlohaInternships")," is located in ",Object(o.b)("inlineCode",{parentName:"li"},"imports/api/internship/import/process-canonical.ts"),".",Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},"We get all the internships by looping over the internAlohaUrls in ",Object(o.b)("inlineCode",{parentName:"li"},"settings.ics.development.json")," file."),Object(o.b)("li",{parentName:"ol"},"We then loop over all the internships:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"removing any HTML from the description"),Object(o.b)("li",{parentName:"ul"},"adding interests based upon the Interest Keyword mappings. See the ",Object(o.b)("inlineCode",{parentName:"li"},"imports/api/interest/InterestKeywordCollection.ts"),"."),Object(o.b)("li",{parentName:"ul"},"updating the internship location."))),Object(o.b)("li",{parentName:"ol"},"Then we filter out any internships without any interests."),Object(o.b)("li",{parentName:"ol"},"Then we collapse the duplicate internships we find from different sites into a single internship with multiple URLs."),Object(o.b)("li",{parentName:"ol"},"We then add a GUID to the internship. Our GUIDs are of the format ",Object(o.b)("inlineCode",{parentName:"li"},"internship-${internship.company}_${internship.position}_${internship.description.length}"),". This might be redundant because the ",Object(o.b)("inlineCode",{parentName:"li"},"Internship.define")," method ignores the GUID."),Object(o.b)("li",{parentName:"ol"},"Then we create a map ",Object(o.b)("inlineCode",{parentName:"li"},"interestsMap")," of Interest slugs to array of internships with that interest."),Object(o.b)("li",{parentName:"ol"},"We loop until we get the ",Object(o.b)("inlineCode",{parentName:"li"},"Meteor.settings.public.internshipCountLimit.import")," internships.",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"In the loop we loop over each of the interests in ",Object(o.b)("inlineCode",{parentName:"li"},"interestsMap")," adding the first internship to the list of internships. We ignore duplicates and if we've used all the internships for an interest we move on to the next interest."))))),Object(o.b)("li",{parentName:"ol"},"We set the list of internships to define to the results.")),Object(o.b)("p",null,"The 'Define Internships' button starts the process of looping over the imported internships and calling ",Object(o.b)("inlineCode",{parentName:"p"},"defineMethod")," for the InternshipCollection. If there are duplicate GUIDs, there will be fewer than ",Object(o.b)("inlineCode",{parentName:"p"},"Meteor.settings.public.internshipCountLimit.import")," defined internships."))}c.isMDXComponent=!0},320:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),c=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=c(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=c(n),d=r,u=b["".concat(a,".").concat(d)]||b[d]||h[d]||o;return n?i.a.createElement(u,s(s({ref:t},l),{},{components:n})):i.a.createElement(u,s({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},574:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/manage-internships-0c9476f44ffd657b1e405dbd1a4e2964.png"}}]);