(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{100:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var a=t(2),r=t(6),o=(t(0),t(320)),i={title:"mup commands"},c={unversionedId:"developers/deployment/reference/mup-commands",id:"developers/deployment/reference/mup-commands",isDocsHomePage:!1,title:"mup commands",description:"Here are some useful commands for managing a RadGrad installation using mup.",source:"@site/docs/developers/deployment/reference/mup-commands.md",slug:"/developers/deployment/reference/mup-commands",permalink:"/docs/developers/deployment/reference/mup-commands",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1609268154,sidebar:"mainSidebar",previous:{title:"Update to a new major release of Mongo",permalink:"/docs/developers/deployment/howto/update-mongo-mup"},next:{title:"settings.json",permalink:"/docs/developers/deployment/reference/settings-file"}},l=[{value:"Stop RadGrad",id:"stop-radgrad",children:[]},{value:"Start RadGrad",id:"start-radgrad",children:[]},{value:"List containers",id:"list-containers",children:[]},{value:"Logs",id:"logs",children:[]},{value:"Restart with changed settings",id:"restart-with-changed-settings",children:[]},{value:"Redeploy RadGrad",id:"redeploy-radgrad",children:[]},{value:"List collections",id:"list-collections",children:[]}],s={rightToc:l};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Here are some useful commands for managing a RadGrad installation using mup."),Object(o.b)("p",null,"All of these commands assume you are in the app/.deploy directory."),Object(o.b)("h2",{id:"stop-radgrad"},"Stop RadGrad"),Object(o.b)("p",null,"To stop the RadGrad service without stopping Mongo, invoke mup stop:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"mup stop\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup stop\n\nStarted TaskList: Stop Meteor\n[radgrad2.ics.hawaii.edu] - Stop Meteor\n[radgrad2.ics.hawaii.edu] - Stop Meteor: SUCCESS\napp/.deploy $\n")),Object(o.b)("h2",{id:"start-radgrad"},"Start RadGrad"),Object(o.b)("p",null,"To start the RadGrad service after it's been stopped, invoke mup start:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"mup start\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup start\n\nStarted TaskList: Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor: SUCCESS\n[radgrad2.ics.hawaii.edu] - Verifying Deployment\n[radgrad2.ics.hawaii.edu] - Verifying Deployment: SUCCESS\napp/.deploy $\n")),Object(o.b)("h2",{id:"list-containers"},"List containers"),Object(o.b)("p",null,"To see the status of your deployment containers, use ssh in conjunction with the docker ps command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"ssh radgrad@radgrad2.ics.hawaii.edu 'docker ps'\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'app/.deploy $ ssh radgrad@radgrad2.ics.hawaii.edu \'docker ps\'\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS                                      NAMES\nccf9e956152d        mup-radgrad:latest                       "/bin/sh -c \'exec $M\u2026"   2 minutes ago       Up 2 minutes        80/tcp, 3000/tcp                           radgrad\n65f89656e468        jrcs/letsencrypt-nginx-proxy-companion   "/bin/bash /app/entr\u2026"   20 hours ago        Up 20 hours                                                    mup-nginx-proxy-letsencrypt\n6ad914fdbeb3        jwilder/nginx-proxy                      "/app/docker-entrypo\u2026"   20 hours ago        Up 20 hours         0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp   mup-nginx-proxy\n7627b9bca4e2        mongo:3.4.1                              "/entrypoint.sh mong\u2026"   45 hours ago        Up 45 hours         127.0.0.1:27017->27017/tcp                 mongodb\n~/\napp/.deploy $\n')),Object(o.b)("p",null,"This also lists the names of the containers: radgrad, mongodb, mup-nginx-proxy-letsencrypt, and mup-nginx-proxy."),Object(o.b)("h2",{id:"logs"},"Logs"),Object(o.b)("p",null,"To see the Meteor log, just invoke mup logs:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup logs\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup logs\n[radgrad2.ics.hawaii.edu]=> Starting meteor app on port:3000\n[radgrad2.ics.hawaii.edu]Monti APM: completed instrumenting the app\n[radgrad2.ics.hawaii.edu]Beginning startup at December 28th 2020, 7:58:39 pm\n[radgrad2.ics.hawaii.edu]Starting loadDatabase: total Docs:  26775 loadFileName:  database/custom/2020-12-21-17-49-13.json\n[radgrad2.ics.hawaii.edu]Invoking startupPublicStats\n[radgrad2.ics.hawaii.edu]Monti APM: Successfully connected\n[radgrad2.ics.hawaii.edu]Finished startup at December 28th 2020, 8:01:50 pm\n")),Object(o.b)("p",null,"To see the logs associated with other containers (such as MongoDB), use ssh in conjunction with the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/commandline/logs/"}),"docker logs")," command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ ssh radgrad@radgrad2.ics.hawaii.edu 'docker logs --tail 5  mongodb'\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ ssh radgrad@radgrad2.ics.hawaii.edu \'docker logs --tail 5  mongodb\'\n2020-10-02T20:08:20.276+0000 I NETWORK  [conn97] received client metadata from 172.17.0.5:41808 conn97: { driver: { name: "nodejs", version: "3.6.2" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "4.15.0-118-generic" }, platform: "\'Node.js v12.16.1, LE (legacy)" }\n2020-10-02T20:08:20.477+0000 I NETWORK  [thread1] connection accepted from 172.17.0.5:41810 #98 (5 connections now open)\n2020-10-02T20:08:20.477+0000 I NETWORK  [conn98] received client metadata from 172.17.0.5:41810 conn98: { driver: { name: "nodejs", version: "3.6.2" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "4.15.0-118-generic" }, platform: "\'Node.js v12.16.1, LE (legacy)" }\n2020-10-02T20:08:20.479+0000 I NETWORK  [thread1] connection accepted from 172.17.0.5:41812 #99 (6 connections now open)\n2020-10-02T20:08:20.481+0000 I NETWORK  [conn99] received client metadata from 172.17.0.5:41812 conn99: { driver: { name: "nodejs", version: "3.6.2" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "4.15.0-118-generic" }, platform: "\'Node.js v12.16.1, LE (legacy)" }\n')),Object(o.b)("h2",{id:"restart-with-changed-settings"},"Restart with changed settings"),Object(o.b)("p",null,"If you just want to change the settings associated with the current deployment, then invoke mup reconfig:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"mup reconfig\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup reconfig\n\nStarted TaskList: Configuring App\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables: SUCCESS\n\nStarted TaskList: Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor: SUCCESS\n[radgrad2.ics.hawaii.edu] - Verifying Deployment\n[radgrad2.ics.hawaii.edu] - Verifying Deployment: SUCCESS\n\napp/.deploy $\n")),Object(o.b)("h2",{id:"redeploy-radgrad"},"Redeploy RadGrad"),Object(o.b)("p",null,"To redeploy RadGrad, you must first stop the current RadGrad container, then run deploy again:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup stop\napp/.deploy $ mup deploy\n")),Object(o.b)("h2",{id:"list-collections"},"List collections"),Object(o.b)("p",null,"To see a list of all collections in the RadGrad database:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"ssh radgrad@radgrad2.ics.hawaii.edu 'docker exec mongodb mongo radgrad --eval \"printjson(db.getCollectionNames())\"'\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ ssh radgrad@radgrad2.ics.hawaii.edu \'docker exec mongodb mongo radgrad --eval "printjson(db.getCollectionNames())"\'\nMongoDB shell version v3.4.1\nconnecting to: mongodb://127.0.0.1:27017/radgrad\nMongoDB server version: 3.4.1\n[\n    "AcademicPlanCollection",\n    "AcademicTermCollection",\n    "AcademicYearInstanceCollection",\n    "AdminProfileCollection",\n    "AdvisorLogCollection",\n    "AdvisorProfileCollection",\n    "CareerGoalCollection",\n    "CourseCollection",\n    "CourseInstanceCollection",\n    "DesiredDegreeCollection",\n    "FacultyProfileCollection",\n    "FavoriteAcademicPlanCollection",\n    "FavoriteCareerGoalCollection",\n    "FavoriteInterestCollection",\n    "FeedCollection",\n    "FeedbackInstanceCollection",\n    "HelpMessageCollection",\n    "IceSnapshotCollection",\n    "InterestCollection",\n    "InterestTypeCollection",\n    "MentorAnswerCollection",\n    "MentorProfileCollection",\n    "MentorQuestionCollection",\n    "OpportunityCollection",\n    "OpportunityInstanceCollection",\n    "OpportunityTypeCollection",\n    "PageInterestCollection",\n    "PageInterestsDailySnapshotCollection",\n    "PlanChoiceCollection",\n    "PublicStatsCollection",\n    "ReviewCollection",\n    "SlugCollection",\n    "StudentParticipationCollectionCollection",\n    "StudentProfileCollection",\n    "TeaserCollection",\n    "UserInteractionCollection",\n    "VerificationRequestCollection",\n    "cronHistory",\n    "meteor_accounts_loginServiceConfiguration",\n    "role-assignment",\n    "roles",\n    "users"\n]\n$\n')))}d.isMDXComponent=!0},320:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return g}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=a,g=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return t?r.a.createElement(g,c(c({ref:n},s),{},{components:t})):r.a.createElement(g,c({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);