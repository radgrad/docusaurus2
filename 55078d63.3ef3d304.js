(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{147:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(2),o=t(6),a=(t(0),t(345)),i={title:"Combined Checklist",sidebar_label:"Combined"},s={unversionedId:"developers/checklists/combined",id:"developers/checklists/combined",isDocsHomePage:!1,title:"Combined Checklist",description:"Here are all the checklist items in one place for easy reference:",source:"@site/docs/developers/checklists/combined.md",slug:"/developers/checklists/combined",permalink:"/docs/developers/checklists/combined",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1622214603,sidebar_label:"Combined",sidebar:"mainSidebar",previous:{title:"Testing Checklist",permalink:"/docs/developers/checklists/testing-checklist"},next:{title:"Overview of RadGrad Testing",permalink:"/docs/developers/testing/overview"}},c=[],l={rightToc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Here are all the checklist items in one place for easy reference:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"* AR-01: Obey file name conventions\n* AR-02: Obey directory structure\n* AR-03: Are new directories consistent\n\n* DE-01: Can you refactor?\n* DE-02: Avoid deeply nested conditionals\n* DE-03: Eliminate dead code\n* DE-04: Eliminate large comment blocks\n* DE-05: Ensure comments are appropriate\n* DE-07: Ensure code is readable\n* DE-08: Ensure code is DRY\n* DE-09: Ensure reusable code is exported\n\n* UI-01: The goal of page is clear\n* UI-02: The layout is appropriate for desktop and mobile\n* UI-03: Links, buttons, and others are obvious\n* UI-04: Forms provide example values\n* UI-05: Requests for information should make the why available\n* UI-06: The page loads acceptably quickly\n* UI-07: The console does not generate errors\n\n* JS-01: Names classes, components, files and directories\n* JS-03: Use the spread operator\n* JS-04: Use object deconstruction\n* JS-05: Use arrow functions\n* JS-06: Avoid lodash map, filter, etc\n* JS-07: Avoid console.logs\n* JS-08: Use JSDoc comments appropriately\n* JS-09: When objects do not have many fields, use one line\n\n* TS-01: Avoid any\n* TS-02: Use React.FC\n\n* CS-01: Use local style.css\n\n* ES-01: No errors, avoid warnings\n* ES-02: Consider modifying our standards\n\n* RE-01: Components should be simple\n* RE-03: No state updates in loops\n* RE-04: Do not rename default exports\n* RE-05: Destructure props in component parameter\n* RE-06: Define typed constants in withTracker\n* RE-07: Use React.CSSProperites\n* RE-08: Don't retrieve collection data inside render\n* RE-09: Imported component names and filenames should match\n* RE-10: Avoid Widget and Card in names\n\n* TU-01: Each collection has unit tests\n* TI-01: Each Meteor Method has integration tests\n* TA-01: Each Page has an isDisplayed acceptance test\n* TA-02: Each form has an acceptance test\n")))}p.isMDXComponent=!0},345:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return t?o.a.createElement(f,s(s({ref:n},l),{},{components:t})):o.a.createElement(f,s({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);